// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package kloster

import (
	"bitbucket.org/ctiu6442/m14b-group-1-cp55/kloster/common/auth"
	"bitbucket.org/ctiu6442/m14b-group-1-cp55/kloster/common/config"
	"bitbucket.org/ctiu6442/m14b-group-1-cp55/kloster/modules/aws"
	"bitbucket.org/ctiu6442/m14b-group-1-cp55/kloster/modules/beer"
	"bitbucket.org/ctiu6442/m14b-group-1-cp55/kloster/modules/beercollection"
	"bitbucket.org/ctiu6442/m14b-group-1-cp55/kloster/modules/brewery"
	"bitbucket.org/ctiu6442/m14b-group-1-cp55/kloster/modules/modelstore"
	"bitbucket.org/ctiu6442/m14b-group-1-cp55/kloster/modules/profile"
	"bitbucket.org/ctiu6442/m14b-group-1-cp55/kloster/modules/untappd"
	"bitbucket.org/ctiu6442/m14b-group-1-cp55/kloster/modules/user"
	"go.uber.org/zap"
)

// Injectors from wire.go:

func initializeModuleSet(klosterConfig *config.Kloster, logger *zap.Logger) (ModuleSet, error) {
	configAuth := klosterConfig.Auth
	authAuth := auth.NewAuth(configAuth)
	configAWS := klosterConfig.AWS
	session, err := aws.GetAWSSession(configAWS)
	if err != nil {
		return ModuleSet{}, err
	}
	modelStore := klosterConfig.ModelStore
	modelstoreModelStore := modelstore.NewModelStore(modelStore, session)
	controller := klosterConfig.Controller
	service, err := brewery.NewService(modelstoreModelStore)
	if err != nil {
		return ModuleSet{}, err
	}
	breweryController := brewery.NewController(controller, logger, authAuth, service)
	beerService := klosterConfig.BeerService
	configUntappd := klosterConfig.Untappd
	untappdService := untappd.NewService(configUntappd, logger)
	service2, err := beer.NewService(beerService, logger, modelstoreModelStore, service, untappdService)
	if err != nil {
		return ModuleSet{}, err
	}
	userService := user.NewService(modelstoreModelStore)
	beerController := beer.NewController(controller, logger, authAuth, service2, userService)
	beercollectionService := beercollection.NewService(modelstoreModelStore)
	beercollectionController := beercollection.NewController(controller, logger, authAuth, beercollectionService)
	profileController := profile.NewController(controller, logger, authAuth, userService, untappdService)
	moduleSet := ModuleSet{
		Config:                   klosterConfig,
		Logger:                   logger,
		Auth:                     authAuth,
		AWSSession:               session,
		ModelStore:               modelstoreModelStore,
		BreweryController:        breweryController,
		BreweryService:           service,
		BeerController:           beerController,
		BeerService:              service2,
		BeerCollectionController: beercollectionController,
		BeerCollectionService:    beercollectionService,
		UntappdService:           untappdService,
		UserService:              userService,
		ProfileController:        profileController,
	}
	return moduleSet, nil
}
